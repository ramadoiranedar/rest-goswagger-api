# Swagger OpenAPI v2
# note: 
# please make sure naming of the components based on definition object name
# and follow the code style
swagger: "2.0"
info:
  description: "For basic structure template REST APIs using GoSwagger v2 developed by Damar"
  title: "REST API Template GoSwagger v2 developed by Damar"
  version: "1.0.0"
produces:
  - application/json
consumes:
  - application/json
schemes:
  - http
host: "localhost:8080" #base url
securityDefinitions:
  key:
    type: "apiKey"
    in: "header"
    name: "x-app-key"
    description: "test"
  hasRole:
    type: apiKey
    in: header
    name: "x-access-role"
  hasProvider:
    type: apiKey
    in: header
    name: "x-provider-id"
  isPeople:
    type: apiKey
    in: header
    name: "x-people-id"
  # Start of role by jwt payload
  hasRoleAdmin:
    type: apiKey
    in: header
    name: Authorization
  hasRoleUser:
    type: apiKey
    in: header
    name: Authorization
  # End of role by jwt payload
security:
  - key: []

# --Start of paths
paths:
  # health
  /health:
    get:
      summary: "health check server"
      description: "endpoint for check health server"
      tags:
        - app
      # Example for implement security
      # security:
      #   - key: []
      #     hasRole:  
      #       - admin
      #       - people
      #     isPeople: []
      responses:
        default:
          description: default
          schema:
            $ref: "#/definitions/basicResponse"
        200:
          description: ok
          schema:
            $ref: "#/definitions/basicResponse"
        400:
          description: bad request
          schema:
            $ref: "#/definitions/basicResponse"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/basicResponse"
        403:
          description: forbidden
          schema:
            $ref: "#/definitions/basicResponse"
        404:
          description: not found
          schema:
            $ref: "#/definitions/basicResponse"
        405:
          description: method not allowed
          schema:
            $ref: "#/definitions/basicResponse"
        415:
          description: unsupported media type
          schema:
            $ref: "#/definitions/basicResponse"
        422:
          description: unprocessable entity
          schema:
            $ref: "#/definitions/basicResponse"
        500:
          description: internal server error
          schema:
            $ref: "#/definitions/basicResponse"
        502:
          description: bad gateway
          schema:
            $ref: "#/definitions/basicResponse"
        
# --End of paths

# --Start of definitions
definitions:
  basicResponse:
    description: definition for basic response code & message when request to endpoint was successful
    type: object
    properties:
      code:
        type: integer
        format: int32
        x-omitempty: false
      message:
        type: string
        x-omitempty: false

  dataResponse:
    description: definition for basic response code & message when request to endpoint was successful
    type: object
    properties:
      data:
        type: object
        format: interface
        x-omitempty: true

  basicWithDataResponse:
    allOf:
      - $ref: "#/definitions/basicResponse"
      - $ref: "#/definitions/dataResponse"

  principal:
    type: object
    properties:
      user_id:
        type: string
        x-omitempty: true
      email:
        type: string
        x-omitempty: true
      role:
        type: string
        x-omitempty: true
      provider:
        type: string
        x-omitempty: true
      people:
        type: string
        x-omitempty: true
      expired_at:
        type: integer
        format: date-time

  pagination:
    type: "object"
    properties:
      current_page:
        type: integer
        x-omitempty: true
        example: 1
      per_page:
        type: integer
        x-omitempty: true
        example: 10
      total_data:
        type: integer
        x-omitempty: true
        example: 100
      total_page:
        type: integer
        x-omitempty: true
        example: 10
        
  # end of models data
# --End of definitions

# --Start of parameters
parameters: {}
# --End of parameters






